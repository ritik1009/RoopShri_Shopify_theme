{% comment %}
  Collection Toggle (Tabbed) â€“ Homepage Section
  - Up to 5 tabs, each mapped to a collection
  - Responsive product grid (desktop/tablet/mobile)
  - Optional mobile horizontal swipe for cards
  - "Load more" per tab (client-side reveal)
  - Premium card look (rounded, shadow, hover image swap, zoom)
  - Animations: fade, slide-up, zoom, none
  - Spacing controls, colors, custom CSS hooks
{% endcomment %}

<section id="ct-{{ section.id }}" class="ct {{ section.settings.custom_css_class }}"
  style="
    background: {{ section.settings.section_bg }};
    padding-top: {{ section.settings.pad_top }}px;
    padding-bottom: {{ section.settings.pad_bottom }}px;
    margin-top: {{ section.settings.mg_top }}px;
    margin-bottom: {{ section.settings.mg_bottom }}px;
  "
  data-mobile-swipe="{{ section.settings.mobile_swipe }}"
  data-animation="{{ section.settings.entry_animation }}"
>
  {% if section.settings.title != blank %}
    <div class="ct__header ct__header--{{ section.settings.title_align }}">
      <h2 class="ct__title"
          style="color: {{ section.settings.title_color }};
                 font-size: {{ section.settings.title_size }}px;
                 font-weight: {{ section.settings.title_weight }};">
        {{ section.settings.title }}
      </h2>
      {% if section.settings.subtitle != blank %}
        <p class="ct__subtitle" style="color: {{ section.settings.subtitle_color }};">
          {{ section.settings.subtitle }}
        </p>
      {% endif %}
    </div>
  {% endif %}

  {%- assign first_tab_id = '' -%}
  <div class="ct__tabs" role="tablist" aria-label="{{ section.settings.title | escape }}">
    {% for block in section.blocks %}
      {% if block.type == 'tab' and block.settings.collection != blank %}
        {% unless first_tab_id %}{% assign first_tab_id = block.id %}{% endunless %}
        <button
          class="ct__tab {% if forloop.first %}is-active{% endif %}"
          id="tab-{{ block.id }}"
          role="tab"
          aria-selected="{{ forloop.first }}"
          aria-controls="panel-{{ block.id }}"
          data-tab-target="panel-{{ block.id }}"
          style="--tab-active: {{ section.settings.tab_active_color }}; --tab-color: {{ section.settings.tab_color }};"
        >
          {{ block.settings.label | default: block.settings.collection.title }}
        </button>
      {% endif %}
    {% endfor %}
  </div>

  <div class="ct__panels">
    {% for block in section.blocks %}
      {% if block.type == 'tab' and block.settings.collection != blank %}
        {% assign coll = collections[block.settings.collection] %}
        {% assign initial_limit = section.settings.initial_limit %}
        {% assign max_render = section.settings.max_render %}
        <div
          id="panel-{{ block.id }}"
          class="ct__panel {% if forloop.first %}is-active{% endif %}"
          role="tabpanel"
          aria-labelledby="tab-{{ block.id }}"
          data-initial="{{ initial_limit }}"
        >
          {% if coll != nil and coll.products_count > 0 %}
            <div class="ct__grid"
                 style="
                  --gap: {{ section.settings.card_gap }}px;
                  --cols-d: {{ section.settings.cols_desktop }};
                  --cols-t: {{ section.settings.cols_tablet }};
                  --cols-m: {{ section.settings.cols_mobile }};
                  --card-radius: {{ section.settings.card_radius }}px;
                  --shadow: {% if section.settings.card_shadow %}0 10px 28px rgba(0,0,0,.1){% else %}none{% endif %};
                  --aspect-w: {{ section.settings.aspect_w }};
                  --aspect-h: {{ section.settings.aspect_h }};
                 ">
              {%- assign count = 0 -%}
              {%- for product in coll.products -%}
                {%- if count >= max_render -%}{%- break -%}{%- endif -%}
                {%- assign count = count | plus: 1 -%}
                <article class="ct-card anim"
                         data-index="{{ forloop.index }}"
                         data-hide="{% if forloop.index > initial_limit %}true{% else %}false{% endif %}"
                         style="display:{% if forloop.index > initial_limit %}none{% else %}block{% endif %};">
                  <a class="ct-card__media" href="{{ product.url | within: coll }}">
                    {% assign first_image = product.featured_media %}
                    {% assign second_image = product.media[1] %}
                    {% if first_image %}
                      <div class="ct-imgwrap">
                        <img
                          class="ct-img ct-img--primary"
                          src="{{ first_image | image_url: width: 800 }}"
                          srcset="
                            {{ first_image | image_url: width: 400 }} 400w,
                            {{ first_image | image_url: width: 600 }} 600w,
                            {{ first_image | image_url: width: 800 }} 800w,
                            {{ first_image | image_url: width: 1200 }} 1200w"
                          sizes="(max-width:768px) 50vw, (max-width:1100px) 25vw, 20vw"
                          alt="{{ product.title | escape }}"
                          loading="lazy"
                        >
                        {% if section.settings.hover_swap and second_image %}
                          <img
                            class="ct-img ct-img--hover"
                            src="{{ second_image | image_url: width: 800 }}"
                            alt="{{ product.title | escape }}"
                            loading="lazy"
                          >
                        {% endif %}
                        <span class="ct-img__overlay"
                              style="background: {{ section.settings.overlay_color }};
                                     opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }};"></span>
                      </div>
                    {% else %}
                      <div class="ct-placeholder"></div>
                    {% endif %}
                    {% if section.settings.show_badge %}
                      {% assign has_discount = false %}
                      {% if product.compare_at_price_max > product.price %}
                        {% assign has_discount = true %}
                      {% endif %}
                      {% if has_discount %}
                        {% assign discount = product.compare_at_price_max | minus: product.price | times: 100.0 | divided_by: product.compare_at_price_max | round %}
                        <span class="ct-badge ct-badge--disc" style="background: {{ section.settings.badge_bg }}; color: {{ section.settings.badge_color }};">
                          -{{ discount }}%
                        </span>
                      {% endif %}
                    {% endif %}
                  </a>

                  <div class="ct-card__body" style="text-align: {{ section.settings.text_align }};">
                    {% if section.settings.show_vendor and product.vendor %}
                      <div class="ct-vendor" style="color: {{ section.settings.vendor_color }};">{{ product.vendor }}</div>
                    {% endif %}
                    {% if section.settings.show_title %}
                      <h3 class="ct-title"
                          style="color: {{ section.settings.product_title_color }};
                                 font-size: {{ section.settings.product_title_size }}px;">
                        <a href="{{ product.url | within: coll }}">{{ product.title }}</a>
                      </h3>
                    {% endif %}

                    <div class="ct-price" style="color: {{ section.settings.price_color }};">
                      {% render 'price', product: product %}
                    </div>

                    {% if section.settings.show_button %}
                      {% assign v = product.selected_or_first_available_variant %}
                      <form method="post" action="/cart/add" class="ct-form">
                        <input type="hidden" name="id" value="{{ v.id }}">
                        <button type="submit" class="ct-btn"
                          {% unless product.available %}disabled{% endunless %}
                          style="
                            --btn-bg: {{ section.settings.btn_bg }};
                            --btn-color: {{ section.settings.btn_color }};
                            --btn-bg-hover: {{ section.settings.btn_bg_hover }};
                            --btn-color-hover: {{ section.settings.btn_color_hover }};
                            border-radius: {{ section.settings.btn_radius }}px;">
                          {% if product.available %}
                            {{ section.settings.button_label }}
                          {% else %}
                            {{ section.settings.button_label_soldout }}
                          {% endif %}
                        </button>
                      </form>
                    {% endif %}
                  </div>
                </article>
              {%- endfor -%}
            </div>

            {% if section.settings.enable_load_more %}
              <div class="ct__more">
                <button class="ct-loadmore" data-panel="panel-{{ block.id }}">
                  {{ section.settings.load_more_label }}
                </button>
              </div>
            {% endif %}
          {% else %}
            <p class="ct-empty">No products found in {{ coll.title }}.</p>
          {% endif %}
        </div>
      {% endif %}
    {% endfor %}
  </div>
</section>

<style>
  #ct-{{ section.id }} .ct__header { max-width: {{ section.settings.max_width }}px; margin: 0 auto 18px; padding: 0 16px; }
  #ct-{{ section.id }} .ct__header--left { text-align: left; }
  #ct-{{ section.id }} .ct__header--center { text-align: center; }
  #ct-{{ section.id }} .ct__header--right { text-align: right; }
  #ct-{{ section.id }} .ct__title { margin: 0; }

  /* Tabs */
  #ct-{{ section.id }} .ct__tabs { max-width: {{ section.settings.max_width }}px; margin: 0 auto 14px; padding: 0 16px; display: flex; gap: 16px; flex-wrap: wrap; }
  #ct-{{ section.id }} .ct__tab {
    appearance: none; border: 0; background: transparent; cursor: pointer; padding: 6px 0;
    position: relative; font-weight: 600; color: var(--tab-color);
  }
  #ct-{{ section.id }} .ct__tab.is-active { color: var(--tab-active); }
  #ct-{{ section.id }} .ct__tab.is-active::after {
    content: ""; position: absolute; left: 0; right: 0; bottom: -6px; height: 2px; background: var(--tab-active);
  }

  /* Panels */
  #ct-{{ section.id }} .ct__panels { max-width: {{ section.settings.max_width }}px; margin: 0 auto; padding: 0 16px; }
  #ct-{{ section.id }} .ct__panel { display: none; }
  #ct-{{ section.id }} .ct__panel.is-active { display: block; }

  /* Grid */
  #ct-{{ section.id }} .ct__grid {
    display: grid; gap: var(--gap);
    grid-template-columns: repeat(var(--cols-d), minmax(0, 1fr));
  }
  @media (max-width: 1100px) {
    #ct-{{ section.id }} .ct__grid { grid-template-columns: repeat(var(--cols-t), minmax(0, 1fr)); }
  }
  @media (max-width: 768px) {
    #ct-{{ section.id }}[data-mobile-swipe="true"] .ct__grid {
      display: grid; grid-auto-flow: column; grid-auto-columns: calc(100% / var(--cols-m));
      overflow-x: auto; scroll-snap-type: x mandatory; -webkit-overflow-scrolling: touch; padding-bottom: 8px;
    }
    #ct-{{ section.id }}[data-mobile-swipe="true"] .ct-card { scroll-snap-align: start; min-width: 0; }
    #ct-{{ section.id }} .ct__grid { grid-template-columns: repeat(var(--cols-m), minmax(0, 1fr)); }
  }

  /* Card */
  #ct-{{ section.id }} .ct-card {
    border-radius: var(--card-radius); box-shadow: var(--shadow); overflow: hidden; background: #fff;
    transition: transform .28s ease, box-shadow .28s ease;
  }
  {% if section.settings.hover_zoom %}
  #ct-{{ section.id }} .ct-card:hover { transform: translateY(-4px); box-shadow: 0 16px 36px rgba(0,0,0,.12); }
  {% endif %}

  #ct-{{ section.id }} .ct-card__media { display: block; position: relative; text-decoration: none; color: inherit; }
  #ct-{{ section.id }} .ct-imgwrap { position: relative; width: 100%; aspect-ratio: var(--aspect-w) / var(--aspect-h); overflow: hidden; }
  #ct-{{ section.id }} .ct-img { width: 100%; height: 100%; object-fit: cover; display: block; transition: transform .35s ease; }
  {% if section.settings.hover_zoom %}
  #ct-{{ section.id }} .ct-card:hover .ct-img--primary { transform: scale(1.05); }
  {% endif %}
  #ct-{{ section.id }} .ct-img--hover { position: absolute; inset: 0; opacity: 0; transition: opacity .25s ease; }
  {% if section.settings.hover_swap %}
  #ct-{{ section.id }} .ct-card:hover .ct-img--hover { opacity: 1; }
  {% endif %}
  #ct-{{ section.id }} .ct-img__overlay { position: absolute; inset: 0; pointer-events: none; }

  /* Badge */
  #ct-{{ section.id }} .ct-badge {
    position: absolute; top: 10px; left: 10px; z-index: 2; font-size: 12px; font-weight: 700;
    line-height: 1; padding: 6px 8px; border-radius: 999px;
  }

  /* Body */
  #ct-{{ section.id }} .ct-card__body { padding: 12px; }
  #ct-{{ section.id }} .ct-vendor { font-size: 12px; margin-bottom: 6px; letter-spacing: .02em; }
  #ct-{{ section.id }} .ct-title { margin: 0 0 6px; font-weight: 600; }
  #ct-{{ section.id }} .ct-title a { color: inherit; text-decoration: none; }
  #ct-{{ section.id }} .ct-price { font-weight: 600; margin-top: 4px; }

  /* Button */
  #ct-{{ section.id }} .ct-form { margin-top: 10px; }
  #ct-{{ section.id }} .ct-btn {
    display: inline-flex; align-items: center; justify-content: center; width: 100%;
    padding: 10px 14px; font-weight: 600; border: 1px solid transparent; cursor: pointer;
    background: var(--btn-bg); color: var(--btn-color); transition: all .2s ease;
  }
  #ct-{{ section.id }} .ct-btn:hover { background: var(--btn-bg-hover); color: var(--btn-color-hover); }
  #ct-{{ section.id }} .ct-btn[disabled] { opacity: .5; cursor: not-allowed; }

  /* Load more */
  #ct-{{ section.id }} .ct__more { text-align: center; margin-top: 16px; }
  #ct-{{ section.id }} .ct-loadmore {
    background: transparent; border: 1px solid #ddd; padding: 10px 16px; cursor: pointer; border-radius: 999px;
  }

  /* Empty state */
  #ct-{{ section.id }} .ct-empty { padding: 12px; opacity: .7; }

  /* Animations on enter */
  #ct-{{ section.id }} .anim { opacity: 0; transform: translateY(12px) scale(0.98); }
  #ct-{{ section.id }}[data-animation="none"] .anim { opacity: 1; transform: none; }
  #ct-{{ section.id }} .anim.is-in { opacity: 1; transform: none; transition: all .5s cubic-bezier(.2,.6,.2,1); }

  {{ section.settings.custom_css }}
</style>

<script>
(() => {
  const root = document.getElementById('ct-{{ section.id }}');

  // Tabs
  const tabs = root.querySelectorAll('.ct__tab');
  const panels = root.querySelectorAll('.ct__panel');
  tabs.forEach(btn => {
    btn.addEventListener('click', () => {
      tabs.forEach(b => b.classList.remove('is-active'));
      panels.forEach(p => p.classList.remove('is-active'));
      btn.classList.add('is-active');
      const id = btn.dataset.tabTarget;
      const panel = root.querySelector('#' + id);
      panel.classList.add('is-active');
    });
  });

  // Load more (reveal more products already rendered)
  root.querySelectorAll('.ct-loadmore').forEach(btn => {
    btn.addEventListener('click', () => {
      const panel = root.querySelector('#' + btn.dataset.panel);
      const init = parseInt(panel.dataset.initial, 10) || 8;
      let revealed = 0;
      panel.querySelectorAll('[data-hide="true"]').forEach(card => {
        if (revealed < init) {
          card.style.display = 'block';
          card.setAttribute('data-hide', 'false');
          revealed++;
        }
      });
      if (!panel.querySelector('[data-hide="true"]')) btn.style.display = 'none';
      observe(); // animate newly revealed
    });
  });

  // Entrance animations
  function observe() {
    const io = new IntersectionObserver((entries, obs) => {
      entries.forEach(e => {
        if (e.isIntersecting) {
          e.target.classList.add('is-in');
          obs.unobserve(e.target);
        }
      });
    }, { rootMargin: '0px 0px -5% 0px', threshold: 0.12 });
    root.querySelectorAll('.anim:not(.is-in)').forEach(el => io.observe(el));
  }
  observe();
})();
</script>

{% schema %}
{
  "name": "Collection Toggle",
  "class": "section-collection-toggle",
  "settings": [
    { "type": "text", "id": "title", "label": "Section title", "default": "Trending Products" },
    { "type": "text", "id": "subtitle", "label": "Subtitle (optional)" },
    { "type": "select", "id": "title_align", "label": "Title alignment", "default": "left",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ]
    },
    { "type": "color", "id": "title_color", "label": "Title color", "default": "#111111" },
    { "type": "color", "id": "subtitle_color", "label": "Subtitle color", "default": "#6b7280" },
    { "type": "range", "id": "title_size", "label": "Title font size (px)", "min": 18, "max": 46, "step": 1, "default": 28 },
    { "type": "select", "id": "title_weight", "label": "Title weight", "default": "700",
      "options": [
        { "value": "500", "label": "Medium" },
        { "value": "600", "label": "Semibold" },
        { "value": "700", "label": "Bold" }
      ]
    },

    { "type": "header", "content": "Layout & Grid" },
    { "type": "range", "id": "cols_desktop", "label": "Products per row (desktop)", "min": 1, "max": 5, "step": 1, "default": 4 },
    { "type": "range", "id": "cols_tablet", "label": "Products per row (tablet)", "min": 1, "max": 4, "step": 1, "default": 3 },
    { "type": "range", "id": "cols_mobile", "label": "Products per row (mobile)", "min": 1, "max": 3, "step": 1, "default": 3 },
    { "type": "range", "id": "card_gap", "label": "Gap between cards (px)", "min": 6, "max": 40, "step": 2, "default": 20 },
    { "type": "checkbox", "id": "mobile_swipe", "label": "Enable horizontal swipe on mobile", "default": true },

    { "type": "header", "content": "Render & Load more" },
    { "type": "range", "id": "initial_limit", "label": "Initial products to show", "min": 4, "max": 20, "step": 1, "default": 8 },
    { "type": "range", "id": "max_render", "label": "Maximum products to render per tab", "min": 8, "max": 50, "step": 2, "default": 24 },
    { "type": "checkbox", "id": "enable_load_more", "label": "Enable Load more button", "default": true },
    { "type": "text", "id": "load_more_label", "label": "Load more label", "default": "Load more" },

    { "type": "header", "content": "Card Appearance" },
    { "type": "range", "id": "card_radius", "label": "Card radius (px)", "min": 0, "max": 36, "step": 1, "default": 16 },
    { "type": "checkbox", "id": "card_shadow", "label": "Card shadow", "default": true },
    { "type": "range", "id": "aspect_w", "label": "Image aspect width", "min": 1, "max": 21, "step": 1, "default": 1 },
    { "type": "range", "id": "aspect_h", "label": "Image aspect height", "min": 1, "max": 21, "step": 1, "default": 1 },
    { "type": "color", "id": "overlay_color", "label": "Image overlay color", "default": "rgba(0,0,0,0.0)" },
    { "type": "range", "id": "overlay_opacity", "label": "Image overlay opacity (%)", "min": 0, "max": 100, "step": 5, "default": 0 },
    { "type": "checkbox", "id": "hover_swap", "label": "Hover: show 2nd image", "default": true },
    { "type": "checkbox", "id": "hover_zoom", "label": "Hover: subtle zoom + lift", "default": true },

    { "type": "header", "content": "Text & Price" },
    { "type": "select", "id": "text_align", "label": "Text alignment", "default": "left",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ]
    },
    { "type": "checkbox", "id": "show_vendor", "label": "Show vendor", "default": false },
    { "type": "color", "id": "vendor_color", "label": "Vendor color", "default": "#6b7280" },
    { "type": "checkbox", "id": "show_title", "label": "Show product title", "default": true },
    { "type": "range", "id": "product_title_size", "label": "Product title size (px)", "min": 12, "max": 22, "step": 1, "default": 14 },
    { "type": "color", "id": "product_title_color", "label": "Product title color", "default": "#111111" },
    { "type": "color", "id": "price_color", "label": "Price color", "default": "#111111" },

    { "type": "header", "content": "Badges" },
    { "type": "checkbox", "id": "show_badge", "label": "Show discount badge", "default": true },
    { "type": "color", "id": "badge_bg", "label": "Badge background", "default": "#ef4444" },
    { "type": "color", "id": "badge_color", "label": "Badge text color", "default": "#ffffff" },

    { "type": "header", "content": "Buttons" },
    { "type": "checkbox", "id": "show_button", "label": "Show Add to cart button", "default": true },
    { "type": "text", "id": "button_label", "label": "Button label", "default": "Add to cart" },
    { "type": "text", "id": "button_label_soldout", "label": "Sold out label", "default": "Sold out" },
    { "type": "color", "id": "btn_bg", "label": "Button background", "default": "#111111" },
    { "type": "color", "id": "btn_color", "label": "Button text color", "default": "#ffffff" },
    { "type": "color", "id": "btn_bg_hover", "label": "Button hover background", "default": "#333333" },
    { "type": "color", "id": "btn_color_hover", "label": "Button hover text color", "default": "#ffffff" },
    { "type": "range", "id": "btn_radius", "label": "Button radius (px)", "min": 0, "max": 30, "step": 1, "default": 9 },

    { "type": "header", "content": "Section Appearance" },
    { "type": "color", "id": "section_bg", "label": "Section background", "default": "#ffffff" },
    { "type": "range", "id": "pad_top", "label": "Padding top (px)", "min": 0, "max": 160, "step": 4, "default": 48 },
    { "type": "range", "id": "pad_bottom", "label": "Padding bottom (px)", "min": 0, "max": 160, "step": 4, "default": 48 },
    { "type": "range", "id": "mg_top", "label": "Margin top (px)", "min": 0, "max": 160, "step": 4, "default": 0 },
    { "type": "range", "id": "mg_bottom", "label": "Margin bottom (px)", "min": 0, "max": 160, "step": 4, "default": 0 },
    { "type": "range", "id": "max_width", "label": "Max content width (px)", "min": 960, "max": 1600, "step": 20, "default": 1200 },

    { "type": "header", "content": "Animations" },
    { "type": "select", "id": "entry_animation", "label": "Card entrance animation", "default": "fade",
      "options": [
        { "value": "fade", "label": "Fade in" },
        { "value": "slide", "label": "Slide up" },
        { "value": "zoom", "label": "Zoom" },
        { "value": "none", "label": "None" }
      ]
    },

    { "type": "header", "content": "Advanced" },
    { "type": "text", "id": "custom_css_class", "label": "Custom CSS class"},
    { "type": "textarea", "id": "custom_css", "label": "Custom CSS" }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Collection tab",
      "limit": 5,
      "settings": [
        { "type": "text", "id": "label", "label": "Tab label", "default": "Featured" },
        { "type": "collection", "id": "collection", "label": "Collection" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Toggle (Tabbed)",
      "blocks": [
        { "type": "tab", "settings": { "label": "Featured" } },
        { "type": "tab", "settings": { "label": "New Arrivals" } },
        { "type": "tab", "settings": { "label": "Best Seller" } }
      ]
    }
  ]
}
{% endschema %}
