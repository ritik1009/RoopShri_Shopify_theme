{% doc %}
  @prompt
    Create a collection carousel along with option for enabling swiper make it responsive I want this to collections to along with custom images and text. I want to have option regarding the shapes, text, spacing, height width. I want the option to change the heading of the carousel the collection text will come below the image and when we hover over the image there should be animations and give me options to choose the animations, not able to add bottom padding
    use swipper using mouse actions
    add option for typography

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-carousel-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
  }

  .ai-collection-carousel__heading-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: {{ block.settings.heading_spacing }}px;
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    font-family: {{ block.settings.heading_font.family }}, {{ block.settings.heading_font.fallback_families }};
    font-weight: {{ block.settings.heading_font.weight }};
    font-style: {{ block.settings.heading_font.style }};
  }

  .ai-collection-carousel__container-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-collection-carousel__wrapper-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.item_spacing }}px;
    cursor: grab;
    {% unless block.settings.enable_swiper %}
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      -ms-overflow-style: none;
    {% endunless %}
    transition: transform 0.3s ease;
  }

  .ai-collection-carousel__wrapper-{{ ai_gen_id }}:active {
    cursor: grabbing;
  }

  .ai-collection-carousel__wrapper-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-collection-carousel__item-{{ ai_gen_id }} {
    flex: 0 0 auto;
    scroll-snap-align: start;
    width: {{ block.settings.item_width }}px;
    user-select: none;
  }

  .ai-collection-carousel__card-{{ ai_gen_id }} {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .ai-collection-carousel__image-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.item_height }}px;
    overflow: hidden;
    {% case block.settings.image_shape %}
      {% when 'circle' %}
        border-radius: 50%;
      {% when 'rounded' %}
        border-radius: {{ block.settings.border_radius }}px;
      {% when 'square' %}
        border-radius: 0;
    {% endcase %}
    margin-bottom: {{ block.settings.text_spacing }}px;
  }

  .ai-collection-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-collection-carousel__placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-collection-carousel__placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-collection-carousel__empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 12px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-collection-carousel__content-{{ ai_gen_id }} {
    text-align: {{ block.settings.text_alignment }};
  }

  .ai-collection-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.title_color }};
    margin: 0 0 {{ block.settings.description_spacing }}px;
    font-family: {{ block.settings.title_font.family }}, {{ block.settings.title_font.fallback_families }};
    font-weight: {{ block.settings.title_font.weight }};
    font-style: {{ block.settings.title_font.style }};
  }

  .ai-collection-carousel__description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.description_color }};
    margin: 0;
    font-family: {{ block.settings.description_font.family }}, {{ block.settings.description_font.fallback_families }};
    font-weight: {{ block.settings.description_font.weight }};
    font-style: {{ block.settings.description_font.style }};
  }

  {% case block.settings.hover_animation %}
    {% when 'scale' %}
      .ai-collection-carousel__card-{{ ai_gen_id }}:hover .ai-collection-carousel__image-{{ ai_gen_id }} {
        transform: scale(1.1);
      }
    {% when 'zoom_out' %}
      .ai-collection-carousel__card-{{ ai_gen_id }}:hover .ai-collection-carousel__image-{{ ai_gen_id }} {
        transform: scale(0.9);
      }
    {% when 'rotate' %}
      .ai-collection-carousel__card-{{ ai_gen_id }}:hover .ai-collection-carousel__image-{{ ai_gen_id }} {
        transform: rotate(5deg) scale(1.05);
      }
    {% when 'slide_up' %}
      .ai-collection-carousel__card-{{ ai_gen_id }}:hover .ai-collection-carousel__image-{{ ai_gen_id }} {
        transform: translateY(-10px);
      }
    {% when 'fade' %}
      .ai-collection-carousel__card-{{ ai_gen_id }}:hover .ai-collection-carousel__image-{{ ai_gen_id }} {
        opacity: 0.8;
      }
  {% endcase %}

  {% if block.settings.enable_swiper %}
    .ai-collection-carousel__navigation-{{ ai_gen_id }} {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      background-color: {{ block.settings.nav_button_color }};
      color: {{ block.settings.nav_button_text_color }};
      border: none;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2;
      transition: opacity 0.3s ease;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    .ai-collection-carousel__navigation-{{ ai_gen_id }}:hover {
      opacity: 0.8;
    }

    .ai-collection-carousel__navigation-{{ ai_gen_id }}:disabled {
      opacity: 0.3;
      cursor: not-allowed;
    }

    .ai-collection-carousel__nav-prev-{{ ai_gen_id }} {
      left: 10px;
    }

    .ai-collection-carousel__nav-next-{{ ai_gen_id }} {
      right: 10px;
    }

    .ai-collection-carousel__dots-{{ ai_gen_id }} {
      display: flex;
      justify-content: center;
      gap: 8px;
      margin-top: 20px;
    }

    .ai-collection-carousel__dot-{{ ai_gen_id }} {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: {{ block.settings.dot_color }};
      border: none;
      cursor: pointer;
      opacity: 0.5;
      transition: opacity 0.3s ease;
    }

    .ai-collection-carousel__dot-{{ ai_gen_id }}.active {
      opacity: 1;
    }
  {% endif %}

  @media screen and (max-width: 749px) {
    .ai-collection-carousel__item-{{ ai_gen_id }} {
      width: {{ block.settings.item_width_mobile }}px;
    }

    .ai-collection-carousel__image-container-{{ ai_gen_id }} {
      height: {{ block.settings.item_height_mobile }}px;
    }

    .ai-collection-carousel__heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-collection-carousel__title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.9 }}px;
    }

    .ai-collection-carousel__description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<collection-carousel-{{ ai_gen_id }}
  class="ai-collection-carousel-{{ ai_gen_id }}"
  data-enable-swiper="{{ block.settings.enable_swiper }}"
  data-items-per-view="{{ block.settings.items_per_view }}"
  data-items-per-view-mobile="{{ block.settings.items_per_view_mobile }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.heading != blank %}
    <h2 class="ai-collection-carousel__heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
  {% endif %}

  <div class="ai-collection-carousel__container-{{ ai_gen_id }}">
    {% if block.settings.enable_swiper %}
      <button class="ai-collection-carousel__navigation-{{ ai_gen_id }} ai-collection-carousel__nav-prev-{{ ai_gen_id }}" aria-label="Previous">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>
      <button class="ai-collection-carousel__navigation-{{ ai_gen_id }} ai-collection-carousel__nav-next-{{ ai_gen_id }}" aria-label="Next">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    {% endif %}

    <div class="ai-collection-carousel__wrapper-{{ ai_gen_id }}">
      {% for i in (1..6) %}
        {% liquid
          assign collection_key = 'collection_' | append: i
          assign custom_image_key = 'custom_image_' | append: i
          assign custom_title_key = 'custom_title_' | append: i
          assign custom_description_key = 'custom_description_' | append: i
          assign custom_link_key = 'custom_link_' | append: i

          assign collection = block.settings[collection_key]
          assign custom_image = block.settings[custom_image_key]
          assign custom_title = block.settings[custom_title_key]
          assign custom_description = block.settings[custom_description_key]
          assign custom_link = block.settings[custom_link_key]

          assign display_image = custom_image | default: collection.featured_image
          assign display_title = custom_title | default: collection.title
          assign display_description = custom_description | default: collection.description
          assign display_link = custom_link | default: collection.url
        %}

        {% if collection != blank or custom_image != blank or custom_title != blank %}
          <div class="ai-collection-carousel__item-{{ ai_gen_id }}">
            <a href="{{ display_link | default: '#' }}" class="ai-collection-carousel__card-{{ ai_gen_id }}">
              <div class="ai-collection-carousel__image-container-{{ ai_gen_id }}">
                {% if display_image %}
                  <img
                    src="{{ display_image | image_url: width: 600}}"
                    alt="{{ display_image.alt | escape }}"
                    class="ai-collection-carousel__image-{{ ai_gen_id }}"loading="lazy"
                    width="600"
                    height="400"
                  >
                {% else %}
                  <div class="ai-collection-carousel__placeholder-{{ ai_gen_id }}">
                    {{ 'collection-1' | placeholder_svg_tag }}<div class="ai-collection-carousel__empty-state-{{ ai_gen_id }}">
                      Add an image
                    </div>
                  </div>
                {% endif %}
              </div>

              <div class="ai-collection-carousel__content-{{ ai_gen_id }}">
                {% if display_title != blank %}
                  <h3 class="ai-collection-carousel__title-{{ ai_gen_id }}">{{ display_title }}</h3>
                {% endif %}
                {% if display_description != blank %}
                  <p class="ai-collection-carousel__description-{{ ai_gen_id }}">{{ display_description | truncate: 100 }}</p>
                {% endif %}
              </div>
            </a>
          </div>
        {% endif %}
      {% endfor %}
    </div>

    {% if block.settings.enable_swiper %}
      <div class="ai-collection-carousel__dots-{{ ai_gen_id }}"></div>
    {% endif %}
  </div>
</collection-carousel-{{ ai_gen_id }}><script>
  (function() {
    class CollectionCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.itemsPerView = parseInt(this.dataset.itemsPerView) || 3;
        this.itemsPerViewMobile = parseInt(this.dataset.itemsPerViewMobile) || 1;
        this.enableSwiper = this.dataset.enableSwiper === 'true';
        this.isDragging = false;
        this.startX = 0;
        this.currentX = 0;
        this.initialTransform = 0;
      }

      connectedCallback() {
        this.wrapper = this.querySelector('.ai-collection-carousel__wrapper-{{ ai_gen_id }}');
        this.items = this.querySelectorAll('.ai-collection-carousel__item-{{ ai_gen_id }}');
        this.totalItems = this.items.length;

        if (this.enableSwiper && this.totalItems > 0) {
          this.setupSwiper();
          this.setupMouseDrag();
        }
      }

      setupSwiper() {
        this.prevBtn = this.querySelector('.ai-collection-carousel__nav-prev-{{ ai_gen_id }}');
        this.nextBtn = this.querySelector('.ai-collection-carousel__nav-next-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('.ai-collection-carousel__dots-{{ ai_gen_id }}');

        this.updateItemsPerView();
        this.createDots();
        this.updateSwiperLayout();
        this.updateNavigation();

        this.prevBtn.addEventListener('click', () => this.goToPrev());
        this.nextBtn.addEventListener('click', () => this.goToNext());

        window.addEventListener('resize', () => {
          this.updateItemsPerView();
          this.updateSwiperLayout();
          this.updateNavigation();
          this.createDots();
        });

        this.setupTouchEvents();
      }

      setupMouseDrag() {
        this.wrapper.addEventListener('mousedown', (e) => this.handleDragStart(e));
        this.wrapper.addEventListener('mousemove', (e) => this.handleDragMove(e));
        this.wrapper.addEventListener('mouseup', (e) => this.handleDragEnd(e));
        this.wrapper.addEventListener('mouseleave', (e) => this.handleDragEnd(e));
        this.wrapper.addEventListener('dragstart', (e) => e.preventDefault());
        
        this.wrapper.addEventListener('click', (e) => {
          if (this.isDragging) {
            e.preventDefault();
            e.stopPropagation();
          }
        });
      }

      setupTouchEvents() {
        this.wrapper.addEventListener('touchstart', (e) => {
          this.startX = e.touches[0].clientX;
          this.isDragging = true;
          this.initialTransform = this.currentIndex;
        });

        this.wrapper.addEventListener('touchmove', (e) => {
          if (!this.isDragging) return;
          e.preventDefault();
          
          this.currentX = e.touches[0].clientX;
          const diffX = this.startX - this.currentX;
          const containerWidth = this.wrapper.offsetWidth;
          const movePercent = (diffX / containerWidth) * 100;
          
          const newTransform = -(this.initialTransform * (100 / this.currentItemsPerView)) + movePercent;
          this.wrapper.style.transform = `translateX(${newTransform}%)`;
        });

        this.wrapper.addEventListener('touchend', (e) => {
          if (!this.isDragging) return;
          this.isDragging = false;
          
          const endX = e.changedTouches[0].clientX;
          const diff = this.startX - endX;
          
          if (Math.abs(diff) > 50) {
            if (diff > 0) {
              this.goToNext();
            } else {
              this.goToPrev();
            }
          } else {
            this.updateSwiperLayout();
          }
        });
      }

      handleDragStart(e) {
        this.isDragging = true;
        this.startX = e.clientX;
        this.initialTransform = this.currentIndex;this.wrapper.style.cursor = 'grabbing';
        e.preventDefault();
      }

      handleDragMove(e) {
        if (!this.isDragging) return;
        
        this.currentX = e.clientX;
        const diffX = this.startX - this.currentX;
        const containerWidth = this.wrapper.offsetWidth;
        const movePercent = (diffX / containerWidth) * 100;
        
        const newTransform = -(this.initialTransform * (100 / this.currentItemsPerView)) + movePercent;
        this.wrapper.style.transform = `translateX(${newTransform}%)`;
        
        e.preventDefault();
      }

      handleDragEnd(e) {
        if (!this.isDragging) return;
        this.isDragging = false;
        this.wrapper.style.cursor = 'grab';
        
        const diffX = this.startX - this.currentX;
        const threshold = 50;
        
        if (Math.abs(diffX) > threshold) {
          if (diffX > 0) {
            this.goToNext();
          } else {
            this.goToPrev();
          }
        } else {
          this.updateSwiperLayout();
        }
      }

      updateItemsPerView() {
        this.currentItemsPerView = window.innerWidth <= 749 ? this.itemsPerViewMobile : this.itemsPerView;
        this.maxIndex = Math.max(0, this.totalItems - this.currentItemsPerView);
        
        if (this.currentIndex > this.maxIndex) {
          this.currentIndex = this.maxIndex;
        }
      }

      updateSwiperLayout() {
        this.wrapper.style.transform = `translateX(-${this.currentIndex * (100 / this.currentItemsPerView)}%)`;
        
        this.items.forEach((item, index) => {
          item.style.flex = `0 0 ${100 / this.currentItemsPerView}%`;
        });
      }

      createDots() {
        this.dotsContainer.innerHTML = '';
        const totalDots = Math.ceil(this.totalItems / this.currentItemsPerView);
        
        for (let i = 0; i < totalDots; i++) {
          const dot = document.createElement('button');
          dot.className = `ai-collection-carousel__dot-{{ ai_gen_id }}`;
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
        this.updateDots();
      }

      updateDots() {
        const dots = this.dotsContainer.querySelectorAll('.ai-collection-carousel__dot-{{ ai_gen_id }}');
        const currentDot = Math.floor(this.currentIndex / this.currentItemsPerView);
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === currentDot);
        });
      }

      updateNavigation() {
        if (this.prevBtn && this.nextBtn) {
          this.prevBtn.disabled = this.currentIndex === 0;
          this.nextBtn.disabled = this.currentIndex >= this.maxIndex;
        }
        this.updateDots();
      }

      goToPrev() {
        if (this.currentIndex > 0) {
          this.currentIndex = Math.max(0, this.currentIndex - 1);
          this.updateSwiperLayout();
          this.updateNavigation();
        }
      }

      goToNext() {
        if (this.currentIndex < this.maxIndex) {
          this.currentIndex = Math.min(this.maxIndex, this.currentIndex + 1);
          this.updateSwiperLayout();
          this.updateNavigation();
        }
      }

      goToSlide(slideIndex) {
        this.currentIndex = Math.min(slideIndex * this.currentItemsPerView, this.maxIndex);
        this.updateSwiperLayout();
        this.updateNavigation();
      }
    }

    customElements.define('collection-carousel-{{ ai_gen_id }}', CollectionCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection carousel",
  "settings": [
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Shop Collections"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "heading_spacing",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Heading spacing",
      "default": 32
    },
    {
      "type": "header",
      "content": "Carousel settings"
    },
    {
      "type": "checkbox",
      "id": "enable_swiper",
      "label": "Enable swiper navigation",
      "default": true
    },
    {
      "type": "range",
      "id": "items_per_view",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Items per view (desktop)",
      "default": 3
    },
    {
      "type": "select",
      "id": "items_per_view_mobile",
      "label": "Items per view (mobile)",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Item spacing",
      "default": 20
    },
    {
      "type": "header",
      "content": "Item dimensions"
    },
    {
      "type": "range",
      "id": "item_width",
      "min": 200,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Item width (desktop)",
      "default": 300
    },
    {
      "type": "range",
      "id": "item_width_mobile",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Item width (mobile)",
      "default": 250
    },
    {
      "type": "range",
      "id": "item_height",
      "min": 150,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Item height (desktop)",
      "default": 250
    },
    {
      "type": "range",
      "id": "item_height_mobile",
      "min": 120,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Item height (mobile)",
      "default": 200
    },
    {
      "type": "header",
      "content": "Image style"
    },
    {
      "type": "select",
      "id": "image_shape",
      "label": "Image shape",
      "options": [
        {
          "value": "square",
          "label": "Square"
        },
        {
          "value": "rounded",
          "label": "Rounded"
        },
        {
          "value": "circle",
          "label": "Circle"
        }
      ],
      "default": "rounded"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 12
    },
    {
      "type": "select",
      "id": "hover_animation",
      "label": "Hover animation",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "scale",
          "label": "Scale up"
        },
        {
          "value": "zoom_out",
          "label": "Scale down"
        },
        {
          "value": "rotate",
          "label": "Rotate"
        },
        {
          "value": "slide_up",
          "label": "Slide up"
        },
        {
          "value": "fade",
          "label": "Fade"
        }
      ],
      "default": "scale"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "text_spacing",
      "min": 8,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Text spacing",
      "default": 16
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 12,
      "max": 28,
      "step": 1,
      "unit": "px",
      "label": "Title size",
      "default": 18
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "font_picker",
      "id": "title_font",
      "label": "Title font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "description_spacing",
      "min": 4,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Description spacing",
      "default": 8
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 14
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "font_picker",
      "id": "description_font",
      "label": "Description font",
      "default": "helvetica_n4"
    },
    {
      "type": "header",
      "content": "Navigation style"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_text_color",
      "label": "Navigation button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Collection 1"
    },
    {
      "type": "collection",
      "id": "collection_1",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "custom_image_1",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "custom_title_1",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "custom_description_1",
      "label": "Custom description"
    },
    {
      "type": "url",
      "id": "custom_link_1",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Collection 2"
    },
    {
      "type": "collection",
      "id": "collection_2",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "custom_image_2",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "custom_title_2",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "custom_description_2",
      "label": "Custom description"
    },
    {
      "type": "url",
      "id": "custom_link_2",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Collection 3"
    },
    {
      "type": "collection",
      "id": "collection_3",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "custom_image_3",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "custom_title_3",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "custom_description_3",
      "label": "Custom description"
    },
    {
      "type": "url",
      "id": "custom_link_3",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Collection 4"
    },
    {
      "type": "collection",
      "id": "collection_4",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "custom_image_4",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "custom_title_4",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "custom_description_4",
      "label": "Custom description"
    },
    {
      "type": "url",
      "id": "custom_link_4",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Collection 5"
    },
    {
      "type": "collection",
      "id": "collection_5",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "custom_image_5",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "custom_title_5",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "custom_description_5",
      "label": "Custom description"
    },
    {
      "type": "url",
      "id": "custom_link_5",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Collection 6"
    },
    {
      "type": "collection",
      "id": "collection_6",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "custom_image_6",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "custom_title_6",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "custom_description_6",
      "label": "Custom description"
    },
    {
      "type": "url",
      "id": "custom_link_6",
      "label": "Custom link"
    }
  ],
  "presets": [
    {
      "name": "Collection carousel"
    }
  ]
}
{% endschema %}