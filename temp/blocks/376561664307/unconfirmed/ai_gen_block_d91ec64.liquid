{% doc %}
  @prompt
    create a collections carousel that I can select custom images for showing the collections give me options to how many collection that i can show

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collections-carousel-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.section_padding }}px 0;
  }

  .ai-collections-carousel-container-{{ ai_gen_id }} {
    max-width: {{ settings.page_width }}px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-collections-carousel-header-{{ ai_gen_id }} {
    text-align: {{ block.settings.text_alignment }};
    margin-bottom: 40px;
  }

  .ai-collections-carousel-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 0 16px;
  }

  .ai-collections-carousel-subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.subtitle_size }}px;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
    margin: 0;
  }

  .ai-collections-carousel-wrapper-{{ ai_gen_id }} {
    position: relative;
  }

  .ai-collections-carousel-track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.5s ease;
    gap: {{ block.settings.gap }}px;
  }

  .ai-collections-carousel-slide-{{ ai_gen_id }} {
    flex: 0 0 auto;
    width: calc((100% - {{ block.settings.gap | times: block.settings.slides_desktop | minus: 1 }}px) / {{ block.settings.slides_desktop }});
  }

  .ai-collections-carousel-card-{{ ai_gen_id }} {
    position: relative;
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    height: {{ block.settings.card_height }}px;
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .ai-collections-carousel-card-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
  }

  .ai-collections-carousel-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-collections-carousel-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-collections-carousel-image-placeholder-{{ ai_gen_id }} svg {
    width: 60px;
    height: 60px;
    opacity: 0.3;
  }

  .ai-collections-carousel-overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,0,0.7) 100%);
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding: 24px;
  }

  .ai-collections-carousel-collection-title-{{ ai_gen_id }} {
    color: white;
    font-size: {{ block.settings.collection_title_size }}px;
    font-weight: 600;
    margin: 0 0 8px;text-shadow: 0 1px 3px rgba(0,0,0,0.5);
  }

  .ai-collections-carousel-collection-count-{{ ai_gen_id }} {
    color: white;
    font-size: 14px;
    opacity: 0.9;
    margin: 0;
    text-shadow: 0 1px 3px rgba(0,0,0,0.5);
  }

  .ai-collections-carousel-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0,0,0,0.7);
    color: white;
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 12px;
    text-align: center;
    pointer-events: none;
  }

  .ai-collections-carousel-nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255,255,255,0.9);
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 2;
  }

  .ai-collections-carousel-nav-{{ ai_gen_id }}:hover {
    background: white;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  }

  .ai-collections-carousel-nav-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ai-collections-carousel-nav-prev-{{ ai_gen_id }} {
    left: -24px;
  }

  .ai-collections-carousel-nav-next-{{ ai_gen_id }} {
    right: -24px;
  }

  .ai-collections-carousel-dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 32px;
  }

  .ai-collections-carousel-dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(0,0,0,0.2);
    border: none;
    cursor: pointer;
    transition: background 0.3s ease;
  }

  .ai-collections-carousel-dot-{{ ai_gen_id }}.active {
    background: {{ block.settings.text_color }};
  }

  @media screen and (max-width: 749px) {
    .ai-collections-carousel-slide-{{ ai_gen_id }} {
      width: calc((100% - {{ block.settings.gap | times: block.settings.slides_mobile | minus: 1 }}px) / {{ block.settings.slides_mobile }});
    }

    .ai-collections-carousel-nav-{{ ai_gen_id }} {
      display: none;
    }

    .ai-collections-carousel-overlay-{{ ai_gen_id }} {
      padding: 16px;
    }

    .ai-collections-carousel-collection-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.collection_title_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<collections-carousel-{{ ai_gen_id }}
  class="ai-collections-carousel-{{ ai_gen_id }}"
  data-auto-play="{% if block.settings.auto_play %}true{% else %}false{% endif %}"
  data-auto-play-speed="{{ block.settings.auto_play_speed }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-collections-carousel-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank or block.settings.subtitle != blank %}
      <div class="ai-collections-carousel-header-{{ ai_gen_id }}">
        {% if block.settings.heading != blank %}
          <h2 class="ai-collections-carousel-title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
        {% endif %}
        {% if block.settings.subtitle != blank %}
          <p class="ai-collections-carousel-subtitle-{{ ai_gen_id }}">{{ block.settings.subtitle }}</p>
        {% endif %}
      </div>
    {% endif %}

    <div class="ai-collections-carousel-wrapper-{{ ai_gen_id }}">
      <div class="ai-collections-carousel-track-{{ ai_gen_id }}">
        {% for i in (1..block.settings.collection_count) %}
          {% liquid
            assign collection_key = 'collection_' | append: i
            assign image_key = 'collection_' | append: i | append: '_image'
            assign collection = block.settings[collection_key]
            assign custom_image = block.settings[image_key]
          %}

          <div class="ai-collections-carousel-slide-{{ ai_gen_id }}">
            {% if collection != blank %}
              <a href="{{ collection.url }}" class="ai-collections-carousel-card-{{ ai_gen_id }}">
                {% if custom_image != blank %}
                  <img
                    src="{{ custom_image | image_url: width: 600 }}"
                    alt="{{ custom_image.alt | default: collection.title | escape }}"
                    class="ai-collections-carousel-image-{{ ai_gen_id }}"loading="lazy"
                    width="600"
                    height="{{ block.settings.card_height }}"
                  >
                {% elsif collection.featured_image %}
                  <img
                    src="{{ collection.featured_image | image_url: width: 600 }}"
                    alt="{{ collection.featured_image.alt | default: collection.title | escape }}"
                    class="ai-collections-carousel-image-{{ ai_gen_id }}"
                    loading="lazy"
                    width="600"
                    height="{{ block.settings.card_height }}"
                  >
                {% else %}
                  <div class="ai-collections-carousel-image-placeholder-{{ ai_gen_id }}">
                    {{ 'collection-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}

                <div class="ai-collections-carousel-overlay-{{ ai_gen_id }}">
                  <h3 class="ai-collections-carousel-collection-title-{{ ai_gen_id }}">{{ collection.title }}</h3>
                  <p class="ai-collections-carousel-collection-count-{{ ai_gen_id }}">
                    {{ collection.products_count }}{% if collection.products_count == 1 %}
                      product
                    {% else %}
                      products
                    {% endif %}
                  </p>
                </div>
              </a>
            {% else %}
              <div class="ai-collections-carousel-card-{{ ai_gen_id }}">
                <div class="ai-collections-carousel-image-placeholder-{{ ai_gen_id }}">
                  {{ 'collection-1' | placeholder_svg_tag }}
                  <div class="ai-collections-carousel-empty-state-{{ ai_gen_id }}">
                    Select collection {{ i }}
                  </div>
                </div>
              </div>
            {% endif %}
          </div>
        {% endfor %}
      </div>

      {% if block.settings.show_navigation %}
        <button
          class="ai-collections-carousel-nav-{{ ai_gen_id }} ai-collections-carousel-nav-prev-{{ ai_gen_id }}"
          aria-label="Previous slide"
        >
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"></polyline>
          </svg>
        </button>
        <button
          class="ai-collections-carousel-nav-{{ ai_gen_id }} ai-collections-carousel-nav-next-{{ ai_gen_id }}"
          aria-label="Next slide"
        >
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"></polyline>
          </svg>
        </button>
      {% endif %}
    </div>

    {% if block.settings.show_dots %}
      <div class="ai-collections-carousel-dots-{{ ai_gen_id }}"></div>
    {% endif %}
  </div>
</collections-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionsCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 0;
        this.slidesPerView = 0;
        this.autoPlayInterval = null;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-collections-carousel-track-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-collections-carousel-slide-{{ ai_gen_id }}');
        this.prevBtn = this.querySelector('.ai-collections-carousel-nav-prev-{{ ai_gen_id }}');
        this.nextBtn = this.querySelector('.ai-collections-carousel-nav-next-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('.ai-collections-carousel-dots-{{ ai_gen_id }}');

        this.calculateSlides();
        this.createDots();
        this.updateCarousel();
        this.setupEventListeners();
        this.setupAutoPlay();

        window.addEventListener('resize', () => {
          this.calculateSlides();
          this.createDots();
          this.updateCarousel();
        });
      }

      disconnectedCallback() {
        if (this.autoPlayInterval) {
          clearInterval(this.autoPlayInterval);
        }
      }

      calculateSlides() {
        const isMobile = window.innerWidth <= 749;
        this.slidesPerView = isMobile ? {{ block.settings.slides_mobile }} : {{ block.settings.slides_desktop }};
        this.totalSlides = Math.max(0, this.slides.length - this.slidesPerView + 1);
      }

      createDots() {
        if (!this.dotsContainer) return;
        
        this.dotsContainer.innerHTML = '';
        for (let i = 0; i < this.totalSlides; i++) {
          const dot = document.createElement('button');
          dot.className = 'ai-collections-carousel-dot-{{ ai_gen_id }}';
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      setupEventListeners() {
        if (this.prevBtn) {
          this.prevBtn.addEventListener('click', () => this.previousSlide());
        }
        if (this.nextBtn) {
          this.nextBtn.addEventListener('click', () => this.nextSlide());
        }

        this.addEventListener('mouseenter', () => this.pauseAutoPlay());
        this.addEventListener('mouseleave', () => this.resumeAutoPlay());
      }

      setupAutoPlay() {
        if (this.dataset.autoPlay === 'true') {
          this.startAutoPlay();
        }
      }

      startAutoPlay() {
        const speed = parseInt(this.dataset.autoPlaySpeed) * 1000;
        this.autoPlayInterval = setInterval(() => {
          this.nextSlide();
        }, speed);
      }

      pauseAutoPlay() {
        if (this.autoPlayInterval) {
          clearInterval(this.autoPlayInterval);
          this.autoPlayInterval = null;
        }
      }

      resumeAutoPlay() {
        if (this.dataset.autoPlay === 'true' && !this.autoPlayInterval) {
          this.startAutoPlay();
        }
      }

      goToSlide(index) {
        this.currentSlide = Math.max(0, Math.min(index, this.totalSlides - 1));
        this.updateCarousel();
      }

      nextSlide() {
        if (this.currentSlide < this.totalSlides - 1) {
          this.currentSlide++;
        } else {
          this.currentSlide = 0;
        }
        this.updateCarousel();
      }

      previousSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
        } else {
          this.currentSlide = this.totalSlides - 1;
        }
        this.updateCarousel();
      }

      updateCarousel() {
        if (!this.track) return;

        const slideWidth = this.slides[0]?.offsetWidth || 0;
        const gap = {{ block.settings.gap }};
        const translateX = -(this.currentSlide * (slideWidth + gap));
        
        this.track.style.transform = `translateX(${translateX}px)`;

        if (this.prevBtn) {
          this.prevBtn.disabled = this.currentSlide === 0;
        }
        if (this.nextBtn) {
          this.nextBtn.disabled = this.currentSlide >= this.totalSlides - 1;
        }

        const dots = this.querySelectorAll('.ai-collections-carousel-dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }
    }

    customElements.define('collections-carousel-{{ ai_gen_id }}', CollectionsCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collections carousel",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Shop by collection"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Discover our curated collections"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Collections"
    },
    {
      "type": "range",
      "id": "collection_count",
      "min": 3,
      "max": 12,
      "step": 1,
      "label": "Number of collections",
      "default": 6
    },
    {
      "type": "collection",
      "id": "collection_1",
      "label": "Collection 1"
    },
    {
      "type": "image_picker",
      "id": "collection_1_image",
      "label": "Custom image for collection 1"
    },
    {
      "type": "collection",
      "id": "collection_2",
      "label": "Collection 2"
    },
    {
      "type": "image_picker",
      "id": "collection_2_image",
      "label": "Custom image for collection 2"
    },
    {
      "type": "collection",
      "id": "collection_3",
      "label": "Collection 3"
    },
    {
      "type": "image_picker",
      "id": "collection_3_image",
      "label": "Custom image for collection 3"
    },
    {
      "type": "collection",
      "id": "collection_4",
      "label": "Collection 4"
    },
    {
      "type": "image_picker",
      "id": "collection_4_image",
      "label": "Custom image for collection 4"
    },
    {
      "type": "collection",
      "id": "collection_5",
      "label": "Collection 5"
    },
    {
      "type": "image_picker",
      "id": "collection_5_image",
      "label": "Custom image for collection 5"
    },
    {
      "type": "collection",
      "id": "collection_6",
      "label": "Collection 6"
    },
    {
      "type": "image_picker",
      "id": "collection_6_image",
      "label": "Custom image for collection 6"
    },
    {
      "type": "collection",
      "id": "collection_7",
      "label": "Collection 7"
    },
    {
      "type": "image_picker",
      "id": "collection_7_image",
      "label": "Custom image for collection 7"
    },
    {
      "type": "collection",
      "id": "collection_8",
      "label": "Collection 8"
    },
    {
      "type": "image_picker",
      "id": "collection_8_image",
      "label": "Custom image for collection 8"
    },
    {
      "type": "collection",
      "id": "collection_9",
      "label": "Collection 9"
    },
    {
      "type": "image_picker",
      "id": "collection_9_image",
      "label": "Custom image for collection 9"
    },
    {
      "type": "collection",
      "id": "collection_10",
      "label": "Collection 10"
    },
    {
      "type": "image_picker",
      "id": "collection_10_image",
      "label": "Custom image for collection 10"
    },
    {
      "type": "collection",
      "id": "collection_11",
      "label": "Collection 11"
    },
    {
      "type": "image_picker",
      "id": "collection_11_image",
      "label": "Custom image for collection 11"
    },
    {
      "type": "collection",
      "id": "collection_12",
      "label": "Collection 12"
    },
    {
      "type": "image_picker",
      "id": "collection_12_image",
      "label": "Custom image for collection 12"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "slides_desktop",
      "min": 2,
      "max": 5,
      "step": 1,
      "label": "Slides per view (desktop)",
      "default": 3
    },
    {
      "type": "select",
      "id": "slides_mobile",
      "label": "Slides per view (mobile)",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "gap",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Gap between slides",
      "default": 20
    },
    {
      "type": "range",
      "id": "card_height",
      "min": 200,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Card height",
      "default": 300
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "auto_play",
      "label": "Auto play",
      "default": false
    },
    {
      "type": "range",
      "id": "auto_play_speed",
      "min": 2,
      "max": 8,
      "step": 1,
      "unit": "s",
      "label": "Auto play speed",
      "default": 4
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Section padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "range",
      "id": "collection_title_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Collection title size",
      "default": 20
    }
  ],
  "presets": [
    {
      "name": "Collections carousel"
    }
  ]
}
{% endschema %}